<?php

declare(strict_types=1);

/*
 * OnfonDeveloperV1Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace OnfonDeveloperV1Lib\Controllers;

use Core\Request\Parameters\BodyParam;
use Core\Request\Parameters\FormParam;
use Core\Request\Parameters\QueryParam;
use Core\Response\Types\ErrorType;
use CoreInterfaces\Core\Request\RequestMethod;
use OnfonDeveloperV1Lib\Exceptions\ApiException;
use OnfonDeveloperV1Lib\Exceptions\IncorrectAuthException;
use OnfonDeveloperV1Lib\Exceptions\SessionExpiredException;
use OnfonDeveloperV1Lib\Exceptions\SomeElseContactException;
use OnfonDeveloperV1Lib\Exceptions\SomeoneElseContactException;
use OnfonDeveloperV1Lib\Exceptions\SomeoneElseException;
use OnfonDeveloperV1Lib\Exceptions\SomeoneElseGroup2Exception;
use OnfonDeveloperV1Lib\Exceptions\SomeoneElseGroupException;
use OnfonDeveloperV1Lib\Models\CreateContactRequest;
use OnfonDeveloperV1Lib\Models\Successful1;
use OnfonDeveloperV1Lib\Models\Successful2;
use OnfonDeveloperV1Lib\Models\Successful3;
use OnfonDeveloperV1Lib\Models\Successful5;
use OnfonDeveloperV1Lib\Models\UpdateContactRequest;

class ContactsController extends BaseController
{
    /**
     * Tp create a `contact`. Send `HTTP POST` request to the following endpoints:
     *
     * > Endpoint: /v2/onfonapps/contacts
     *
     * ###### API Request
     *
     * ```
     * {
     * "contact": {
     * "phone": "254700000000",
     * "names": "John Does"
     * "groupId": "2"
     * }
     * }
     * ```
     *
     * ###### Request parameters
     *
     * In addition to the [Authorization headers](/docs/request_headers), the body of the request should
     * contain the following fields:
     *
     * | Field       | Type                | Description                                   |
     * | ----------- | ------------------- | --------------------------------------------- |
     * | **phone**   | `String` `Required` | Contact Phone                                 |
     * | **names**   | `String` `Optional` | The contact names                             |
     * | **email**   | `String` `Optional` | The contact email                             |
     * | **groupId** | `Number` `Required` | The group id where the contact will belong to |
     *
     * ###### API Response
     *
     * ```
     * {
     * "contactId": "19390485",
     * "clientId": "3",
     * "client": null,
     * "phone": "254700000000",
     * "names": "",
     * "email": "",
     * "groupId": "2",
     * "group": null,
     * "createDate": "2022-10-04T09:11:02Z",
     * "updateDate": "2022-10-04T09:11:02Z"
     * }
     * ```
     *
     * @param CreateContactRequest $body
     *
     * @return Successful1 Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function createContact(CreateContactRequest $body): Successful1
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/v1/onfonapps/contacts')
            ->auth('global')
            ->parameters(BodyParam::init($body));

        $_resHandler = $this->responseHandler()
            ->throwErrorOn(401, ErrorType::init('Unauthorized', SessionExpiredException::class))
            ->throwErrorOn(403, ErrorType::init('Forbidden', SomeoneElseGroupException::class))
            ->type(Successful1::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * Retrieves a collection of user contacts.
     *
     * Send `HTTP GET` request to the following endpoints:
     * > URL: https://apis.onfonmedia.co.ke/v2/onfonapps/contacts
     *
     * ######  API Response
     * ```
     * {
     * "nextPageToken": "MTkzOTA0ODc=",
     * "contacts": [
     * {
     * "contactId": "19390487",
     * "clientId": "3",
     * "client": {
     * "clientId": "3",
     * "clientNames": "John Doe",
     * "clientStatus": "ACTIVE"
     * },
     * "phone": "254716000000",
     * "names": "",
     * "email": "",
     * "groupId": "29",
     * "group": {
     * "groupId": "29",
     * "groupName": "Test group"
     * },
     * "createDate": "2022-10-04T09:59:24Z",
     * "updateDate": "2022-10-04T09:59:24Z"
     * }
     * ],
     * "collectionCount": 3
     * }
     * ```
     *
     * @param int $pageSize
     *
     * @return Successful2 Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function listContacts(int $pageSize): Successful2
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::GET, '/v1/onfonapps/contacts')
            ->auth('global')
            ->parameters(QueryParam::init('pageSize', $pageSize));

        $_resHandler = $this->responseHandler()
            ->throwErrorOn(401, ErrorType::init('Unauthorized', IncorrectAuthException::class))
            ->type(Successful2::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * Retrieves a single contact resource.
     *
     * Send `HTTP GET` request to the following endpoints:
     * > URL: https://apis.onfonmedia.co.ke/v2/onfonapps/contacts/{contactId}
     *
     * ######  API Response
     * ```
     * {
     * "contactId": "19390487",
     * "clientId": "3",
     * "client": {
     * "clientId": "3",
     * "clientNames": "John Doe",
     * "clientStatus": "ACTIVE"
     * },
     * "phone": "254716000000",
     * "names": "",
     * "email": "",
     * "groupId": "29",
     * "group": {
     * "groupId": "29",
     * "groupName": "Test group"
     * },
     * "createDate": "2022-10-04T09:59:24Z",
     * "updateDate": "2022-10-04T09:59:24Z"
     * }
     * ```
     *
     * @return Successful3 Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function getContact(): Successful3
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::GET, '/v1/onfonapps/contacts/19390487')->auth('global');

        $_resHandler = $this->responseHandler()
            ->throwErrorOn(403, ErrorType::init('Forbidden', SomeoneElseContactException::class))
            ->type(Successful3::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * Removes a contact contact resource.
     *
     * Send `HTTP DELETE` request to the following endpoints:
     * > URL: https://apis.onfonmedia.co.ke/v2/onfonapps/contact/{contactId}
     *
     * ######  API Response
     * ```
     * {}
     * ```
     *
     * @return array Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function deleteContact(): array
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::DELETE, '/v1/onfonapps/contacts/19390486')->auth('global');

        $_resHandler = $this->responseHandler()
            ->throwErrorOn(401, ErrorType::init('Unauthorized', IncorrectAuthException::class))
            ->throwErrorOn(403, ErrorType::init('Forbidden', SomeoneElseException::class));

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * Updates a contact field. Send `HTTP PATCH` request to the following endpoints:
     * > URL: https://apis.onfonmedia.co.ke/v2/onfonapps/contacts/{contactId}
     *
     * ######  API Request
     * ```
     * {
     * "contact": {
     * "names": "John Cena"
     * }
     * }
     * ```
     *
     * ###### Request parameters
     * In addition to the [Authorization headers](/docs/request_headers), the body of the request should
     * contain the following fields:
     *
     * | Field | Type | Description
     * | ----------- | ----------- | ----------- |
     * | **names** | `String` `Optional` | Names for the given contact |
     * | **email**| `String` `Optional` | Email address for the give contact |
     *
     * ######  API Response
     * ```
     * {
     * "contactId": "0",
     * "clientId": "0",
     * "client": null,
     * "phone": "",
     * "names": "John Cena",
     * "email": "",
     * "groupId": "0",
     * "group": null,
     * "createDate": "0001-01-01T00:00:00Z",
     * "updateDate": "2022-10-04T10:12:12Z"
     * }
     * ```
     *
     * @param UpdateContactRequest $body
     *
     * @return Successful1 Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function updateContact(UpdateContactRequest $body): Successful1
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::PATCH, '/v1/onfonapps/contacts/19390487')
            ->auth('global')
            ->parameters(BodyParam::init($body));

        $_resHandler = $this->responseHandler()
            ->throwErrorOn(401, ErrorType::init('Unauthorized', IncorrectAuthException::class))
            ->throwErrorOn(403, ErrorType::init('Forbidden', SomeElseContactException::class))
            ->type(Successful1::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * Assume you want to create 1000 contacts at a go.
     * The ``upload contact`` API lets you upload many contacts. It is fast and suitable for large contact
     * uploads.
     * Simply add the contacts in a file, then upload it by sending `HTTP POST` request to the following
     * endpoints:
     * > URL: https://apis.onfonmedia.co.ke/v2/onfonapps/contacts:uploadContact
     *
     *
     * ###### Request parameters
     * In addition to the [Authorization headers](/docs/request_headers), the body of the request should
     * contain the following ```formdata``` fields:
     *
     * | Field | Type | Description
     * | ----------- | ----------- | ----------- |
     * | **groupId** | `Number` `Required` | Group id for the upload. Note The group must already exist |
     * | **contacts**| `File` `Required` | File containing contacts |
     *
     * ######  API Response
     * ```
     * {
     * "message": "successfully uploaded"
     * }
     * ```
     *
     * @param int $groupId
     * @param string $contacts
     *
     * @return Successful5 Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function uploadContacts(int $groupId, string $contacts): Successful5
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/v1/onfonapps/contacts:uploadContact')
            ->auth('global')
            ->parameters(FormParam::init('groupId', $groupId), FormParam::init('contacts', $contacts));

        $_resHandler = $this->responseHandler()
            ->throwErrorOn(400, ErrorType::init('Bad Request', SomeoneElseGroup2Exception::class))
            ->throwErrorOn(401, ErrorType::init('Unauthorized', IncorrectAuthException::class))
            ->type(Successful5::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }
}
