<?php

declare(strict_types=1);

/*
 * OnfonDeveloperV1Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace OnfonDeveloperV1Lib\Tests\Controllers;

use Core\TestCase\BodyMatchers\KeysBodyMatcher;
use Core\TestCase\TestParam;
use OnfonDeveloperV1Lib\Controllers\GroupController;
use OnfonDeveloperV1Lib\Exceptions;
use OnfonDeveloperV1Lib\Models;

class GroupControllerTest extends BaseTestController
{
    /**
     * @var GroupController GroupController instance
     */
    protected static $controller;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass(): void
    {
        self::$controller = parent::getClient()->getGroupController();
    }

    public function testCreateGroup()
    {
        // Parameters for the API call
        $body = TestParam::object(
            "{\r\n  \"group\": {\r\n    \"groupName\": \"Test group\"\r\n  }\r\n}",
            Models\CreateGroupRequest::class
        );

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->createGroup($body);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json', false];
        $headers['Content-Length'] = ['194', false];
        $headers['Connection'] = ['keep-alive', false];
        $headers['Grpc-Metadata-Content-Type'] = ['application/grpc', false];
        $headers['Vary'] = ['Origin', false];
        $headers['Date'] = ['Tue, 04 Oct 2022 08:40:07 GMT', false];
        $headers['Access-Control-Allow-Origin'] = ['*', false];
        $headers['X-Kong-Upstream-Latency'] = ['8', false];
        $headers['X-Kong-Proxy-Latency'] = ['0', false];
        $headers['Via'] = ['kong/2.8.1', false];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                "{\r\n  \"groupId\": \"26\",\r\n  \"groupName\": \"Test group\",\r\n  \"clientI" .
                "d\": \"1\",\r\n  \"client\": null,\r\n  \"description\": \"\",\r\n  \"parentId" .
                "\": \"\",\r\n  \"contacts\": 0,\r\n  \"updateDate\": \"2022-10-04T08:40:07Z\"," .
                "\r\n  \"createDate\": \"2022-10-04T08:40:07Z\"\r\n}"
            )))
            ->assert();
    }

    public function testListGroups()
    {
        // Parameters for the API call
        $pageSize = 2;
        $pageToken = '';

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->listGroups($pageSize, $pageToken);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json', false];
        $headers['Content-Length'] = ['448', false];
        $headers['Connection'] = ['keep-alive', false];
        $headers['Grpc-Metadata-Content-Type'] = ['application/grpc', false];
        $headers['Vary'] = ['Origin', false];
        $headers['Date'] = ['Tue, 04 Oct 2022 08:53:35 GMT', false];
        $headers['Access-Control-Allow-Origin'] = ['*', false];
        $headers['X-Kong-Upstream-Latency'] = ['4', false];
        $headers['X-Kong-Proxy-Latency'] = ['1', false];
        $headers['Via'] = ['kong/2.8.1', false];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                "{\r\n  \"nextPageToken\": \"MjY=\",\r\n  \"groups\": [\r\n    {\r\n      \"gro" .
                "upId\": \"27\",\r\n      \"groupName\": \"Test group\",\r\n      \"clientId\": " .
                "\"1\",\r\n      \"client\": null,\r\n      \"description\": \"\",\r\n      \"pa" .
                "rentId\": \"\",\r\n      \"contacts\": 0,\r\n      \"updateDate\": \"2022-10-04" .
                "T08:53:10Z\",\r\n      \"createDate\": \"2022-10-04T08:53:10Z\"\r\n    },\r\n  " .
                "  {\r\n      \"groupId\": \"26\",\r\n      \"groupName\": \"Test group\",\r\n  " .
                "    \"clientId\": \"1\",\r\n      \"client\": null,\r\n      \"description\": " .
                "\"\",\r\n      \"parentId\": \"\",\r\n      \"contacts\": 0,\r\n      \"updateD" .
                "ate\": \"2022-10-04T08:40:07Z\",\r\n      \"createDate\": \"2022-10-04T08:40:07" .
                "Z\"\r\n    }\r\n  ],\r\n  \"collectionCount\": 5\r\n}"
            )))
            ->assert();
    }

    public function testGetGroup()
    {
        // Perform API call
        $result = null;
        try {
            $result = self::$controller->getGroup();
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json', false];
        $headers['Content-Length'] = ['258', false];
        $headers['Connection'] = ['keep-alive', false];
        $headers['Grpc-Metadata-Content-Type'] = ['application/grpc', false];
        $headers['Vary'] = ['Origin', false];
        $headers['Date'] = ['Tue, 04 Oct 2022 08:54:52 GMT', false];
        $headers['Access-Control-Allow-Origin'] = ['*', false];
        $headers['X-Kong-Upstream-Latency'] = ['5', false];
        $headers['X-Kong-Proxy-Latency'] = ['1', false];
        $headers['Via'] = ['kong/2.8.1', false];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                "{\r\n  \"groupId\": \"27\",\r\n  \"groupName\": \"Test group\",\r\n  \"clientI" .
                "d\": \"1\",\r\n  \"client\": {\r\n    \"clientId\": \"1\",\r\n    \"clientNames" .
                "\": \"Root User\",\r\n    \"clientStatus\": \"ACTIVE\"\r\n  },\r\n  \"descripti" .
                "on\": \"\",\r\n  \"parentId\": \"\",\r\n  \"contacts\": 0,\r\n  \"updateDate\":" .
                " \"2022-10-04T08:53:10Z\",\r\n  \"createDate\": \"2022-10-04T08:53:10Z\"\r\n}"
            )))
            ->assert();
    }

    public function testDeleteGroup()
    {
        // Perform API call
        $result = null;
        try {
            $result = self::$controller->deleteGroup();
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json', false];
        $headers['Content-Length'] = ['2', false];
        $headers['Connection'] = ['keep-alive', false];
        $headers['Grpc-Metadata-Content-Type'] = ['application/grpc', false];
        $headers['Vary'] = ['Origin', false];
        $headers['Date'] = ['Tue, 04 Oct 2022 08:56:07 GMT', false];
        $headers['Access-Control-Allow-Origin'] = ['*', false];
        $headers['X-Kong-Upstream-Latency'] = ['10', false];
        $headers['X-Kong-Proxy-Latency'] = ['1', false];
        $headers['Via'] = ['kong/2.8.1', false];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object('{}')))
            ->assert();
    }
}
